name: 'Terramate - Plan'

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      productName:
        description: 'Name of product'
        required: true
        default: 'productdemo'
      env:
        type: choice
        description: 'Environment Name'
        options:
        - development
        - staging
        - production
        default: development
      serviceName:
        description: 'Service Name'
        required: true
        default: 'api'
      serviceName1:
        description: 'Second Service Name'
        required: true
        default: 'web'
      region:
        description: 'Region'
        required: true
        default: 'australiaeast'       
      sqlAdminName:
        description: 'SQL Server Admin Name'
        required: true
        default: 'sqladmin' 
      sqlAdminPassword:
        description: 'SQL Server Admin Password'
        required: true
        default: 'NOTsoSECUREpasscode55*' 
      databaseName:
        description: 'First Database Name'
        required: true
        default: 'api' 
      databaseName1:
        description: 'Second Database Name'
        required: true
        default: 'hangfire' 

permissions:
  contents: read

env:
  AWS_REGION: ap-southeast-1

jobs:
  terraform:
    name: 'Terraform'
    runs-on: self-hosted
    environment: development
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    # - uses: terramate-io/terramate-action@v1
    - run: cd AWS/stacks
    - run: terramate generate
    - run: terramate run --chdir AWS/stacks -- tflocal init
    - run: terramate run --chdir AWS/stacks -- tflocal plan
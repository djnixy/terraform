name: 'Azure Terramate - Plan'

on:
  push:
    paths:
      - AZURE/**
  pull_request:
  workflow_dispatch:
    inputs:
      productName:
        description: 'Name of product'
        required: true
        default: 'productdemo'
      env:
        type: choice
        description: 'Environment Name'
        options:
        - development
        - staging
        - production
        default: development
      serviceName:
        description: 'Service Name'
        required: true
        default: 'api'
      serviceName1:
        description: 'Second Service Name'
        required: true
        default: 'web'
      region:
        description: 'Region'
        required: true
        default: 'australiaeast'       
      sqlAdminName:
        description: 'SQL Server Admin Name'
        required: true
        default: 'sqladmin' 
      sqlAdminPassword:
        description: 'SQL Server Admin Password'
        required: true
        default: 'NOTsoSECUREpasscode55*' 
      databaseName:
        description: 'First Database Name'
        required: true
        default: 'api' 
      databaseName1:
        description: 'Second Database Name'
        required: true
        default: 'hangfire' 

permissions:
  contents: read

env:
  AWS_REGION: ap-southeast-1

jobs:
  terraform:
    name: 'Terraform'
    runs-on: self-hosted
    environment: development
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

        
    - uses: cschleiden/replace-tokens@v1.2
      with:
        tokenPrefix: '{'
        tokenSuffix: '}'
        files: '["**/terraform.tfvars"]'
      env:
        productName: ${{ github.event.inputs.productName }}
        serviceName: ${{ github.event.inputs.serviceName }}
        serviceName1: ${{ github.event.inputs.serviceName1 }}
        env: ${{ github.event.inputs.env }}
        region: ${{ github.event.inputs.region }}
        sqlAdminName: ${{ github.event.inputs.sqlAdminName }}
        sqlAdminPassword: ${{ github.event.inputs.sqlAdminPassword }}
        databaseName: ${{ github.event.inputs.databaseName }}
        databaseName1: ${{ github.event.inputs.databaseName1 }}
        
#     - name: az login
#       env:
#         CLIENT_ID: ${{ secrets.CLIENT_ID }}
#         CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
#         TENANT_ID: ${{ secrets.TENANT_ID }}
#         SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
#       run: |
#         az login --service-principal -u $CLIENT_ID -p $CLIENT_SECRET --tenant $TENANT_ID
#         az account list -o table
#         export ARM_CLIENT_ID=$CLIENT_ID
#         export ARM_CLIENT_SECRET=$CLIENT_SECRET
#         export ARM_SUBSCRIPTION_ID=$SUBSCRIPTION_ID
#         export ARM_TENANT_ID=$TENANT_ID
    
    # - uses: terramate-io/terramate-action@v1
    - run: cd AWS/stacks
    - run: terramate generate
    - run: terramate run --chdir AZURE/stacks -- terraform init \
        -backend-config=subscription_id="$ARM_SUBSCRIPTION_ID" \
        -backend-config=tenant_id="$ARM_TENANT_ID" \
        -backend-config=client_id="$ARM_CLIENT_ID" \
        -backend-config=client_secret="$ARM_CLIENT_SECRET"
    - run: terramate run --chdir AZURE/stacks -- terraform plan